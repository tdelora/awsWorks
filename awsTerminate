#!/usr/bin/env python3
import sys
import argparse
import aws_kpc, aws_icc, aws_lambda

inList = []
payload = b"""{"action":"term-all"}"""

def terminateInstances():
    if inList:
        aws_icc.aws_terminate_instance(inList)
        for instance in inList:
            stateCode,stateString = aws_icc.aws_instance_state(instance)
            if stateCode == 32 or stateCode == 48:
                # State 32 indicates the instance is shutting-down
                # State 48 indicates the instance is terminated
                print('Instance {}: {}'.format(instance,stateString))
            else:
                print('Received unexpected state ({}) {} when terminateing instance{}'.format(stateCode,stateString,instance))
        
        """
        For future development this belongs here. Issue is the lambda call fails with the
        payload designated for a single instance termination. I have temporarily commented
        out this code to continue general lambda development.
        
        if (aws_lambda.trigger_event("my-function",payload)):
                print("AWS Lambda monitoring has been informed.")
        else:
            print("AWS Lambda monitoring trigger has failed. Please monitor your EC2 instances manually!")
        """

# Work starts here
parser = argparse.ArgumentParser(description='Shutdown one or more running instances')
parser.add_argument("-i","--id", help="The instance id to terminate.",type=str)
parser.add_argument("-a","--all", help="Termanate all running instances.",action="store_true")
if len(sys.argv) < 2:
    parser.print_usage()
    sys.exit(1)
args = parser.parse_args()

if args.id:
    stateCode,stateString = aws_icc.aws_instance_state(args.id)
    # payload = b"""{"action":"term-instance","id":args.id}"""

    if stateCode == 16:
        # State 16 indicates the instance is running
        print('Instance {}: {} - Terminating'.format(args.id,stateString))
        inList.append(args.id)
        terminateInstances()
    else:
        print('Instance {}: ({}) {} - wait until state is running (16).'.format(args.id,stateCode,stateString))
elif args.all:
    inList = aws_icc.aws_get_instances_with_state(16)
    if inList:
        print("Bulk terminating instances {}".format(inList))
        terminateInstances()
        if (aws_lambda.trigger_event("my-function",payload)):
                print("AWS Lambda monitoring has been informed.")
        else:
            print("AWS Lambda monitoring trigger has failed. Please monitor your EC2 instances manually!")
    else:
        print("Nothing to terminate.")
