#!/usr/bin/env python3
import sys
import argparse
import aws_kpc, aws_icc, aws_lambda

exitBeforeCreate = False
keyPairName = "notSet"

"""
The payload is a basic safety measure, must be passed into lambda function
monitor-running-ec2-instances as is below or it will not trigger.
"""
payload = b"""{"action":"start"}"""

parser = argparse.ArgumentParser("Launches 1 to N instances of AWS Linux with size of t2.micro.")
parser.add_argument("-n","--minCount",help="The minimum number of instances needed. Default: 1",type=int,default=1)
parser.add_argument("-x","--maxCount",help="The maximum number of instances needed. Default: 1",type=int,default=1)
requiredArgs = parser.add_argument_group('required named arguments')
requiredArgs.add_argument("-k","--keyPair", help="The keyPair to use for the instance",type=str,required=True)
args = parser.parse_args()

keyPairName = args.keyPair

returnValue = aws_kpc.aws_kp_check(keyPairName)

if returnValue == "create":
	if ( aws_kpc.aws_kp_create(keyPairName) == 0 ):
		exitBeforeCreate = True
elif returnValue == "quit":
	exitBeforeCreate = True
else:
	print("keypair " + keyPairName + " exists")

if ( exitBeforeCreate ):
	print(sys.argv[0] + " : exiting")
	quit()

instanceList = aws_icc.aws_create_instance(	'ami-0e65ed16c9bf1abc7',
											't2.micro',
											args.minCount,
											args.maxCount,
											keyPairName)

if instanceList:
	if (aws_lambda.trigger_event("monitor-running-ec2-instances",payload)):
		print("AWS Lambda monitoring has been requested.")
	else:
		print("AWS Lambda monitoring request has failed. Please monitor your EC2 instances manually!")

for instance in instanceList:
	print(instance.id)

quit()
